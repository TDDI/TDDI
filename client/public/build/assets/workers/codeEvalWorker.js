onmessage=function(e){function merge(e,s){var r=Array.isArray(s),c=r&&[]||{};return r?(e=e||[],c=c.concat(e),s.forEach(function(s,r){"undefined"==typeof c[r]?c[r]=s:"object"==typeof s?c[r]=deepmerge(e[r],s):-1===e.indexOf(s)&&c.push(s)})):(e&&"object"==typeof e&&Object.keys(e).forEach(function(s){c[s]=e[s]}),Object.keys(s).forEach(function(r){c[r]="object"==typeof s[r]&&s[r]&&e[r]?deepmerge(e[r],s[r]):s[r]})),c}var injectThen=function(scope,cb){for(var key in scope)eval(key+"=scope[key];");return cb()},test=function(){return function(){var failureCases=void 0,successCases=void 0,error=void 0,result=void 0,scope=void 0,key=void 0;try{eval(code)}catch(e){return e.toString()}}()},code=e.data[0],preOp=e.data[1],options=e.data[2],scripts=options.scripts,result=void 0,error=!1,expect;for(var i in scripts)importScripts(scripts[i]);chai&&(expect=chai.expect),eval(preOp),failureCases=failureCases||[],successCases=successCases||[];for(var i in successCases){var successCase=successCases[i],response=injectThen(successCase.scope,test);if(response){error=response+"\n"+successCase.failMessage;for(var key in successCase.scope)error+="\n  '"+key+"':"+successCase.scope[key].toString();break}}if(!error)for(var i in failureCases){var failureCase=failureCases[i],successCase=merge({},successCases[0]),response=injectThen(merge(successCase.scope,failureCase.scope),test);if(!response){error=failureCase.failMessage;for(var key in failureCase.scope)error+="\n  '"+key+"':"+failureCase.scope[key];break}}postMessage({result:result,error:error})};